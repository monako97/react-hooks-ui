@charset "UTF-8";

@box-shadow-size: 1px 9px 20px 0;
@toast-types: warning, success, primary, danger, info;
@toast-types-content: '\e670', '\e726', '\e669', '\e640','\e6eb';
@types-length: length(@toast-types);

.loop-toast-type(@count, @idx) when (@idx <= @count) {
  @color: extract(@toast-types, @idx);
  &.@{color} {
    background-color: ~'var(--@{color}-color)';
    box-shadow: @box-shadow-size ~'var(--@{color}-color-rgba)';
    &::before {
      margin-right: 0.5rem;
      font-size: 1rem;
      font-family: 'neko__icon', sans-serif;
      content: extract(@toast-types-content, @idx);
    }
  }
  .loop-toast-type(@count, @idx + 1);
}

.error {
  animation: error 1s ease-in-out;
}

.rc-toast {
  position: relative;
  right: 0;
  left: 0;
  display: flex;
  flex-direction: row;
  align-items: center;
  width: fit-content;
  min-width: 150px;
  max-width: 100%;
  margin: 10px auto 0;
  padding: 0.5rem;
  color: #fff;
  border-radius: 0.5rem;
  cursor: pointer;
  user-select: none;
  pointer-events: none;
  &::after, &::before {
    font-size: 1rem;
    font-family: 'neko__icon', sans-serif;
    opacity: 0.75;
  }
  &::after {
    margin-left: 0.5rem;
    font-weight: lighter;
    cursor: pointer;
    content: '\e720';
    pointer-events: auto;
  }
  &:hover {
    &::after {
      opacity: 1;
    }
  }
  strong {
    flex: 1;
    font-weight: bold;
    text-align: center;
  }
  .loop-toast-type(@types-length, 1);
  &.loading {
    top: 0;
    bottom: 0;
    width: 100%;
    height: 100%;
  }
  &.init-view {
    animation: opacity-in 0.3s forwards, transform-y-bottom 0.3s forwards;
  }
  &-exit {
    animation: opacity-out 0.3s forwards, transform-y-top 0.3s forwards;
  }
  &-exit ~ & {
    transform: translate3d(0, calc(-100% - 10px), 0) !important;
    transition: all 0.3s;
  }
}
@keyframes opacity-out {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}
@keyframes opacity-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
@keyframes transform-y-top {
  from {
    transform: translate3d(0, 0, 0);
  }
  to {
    transform: translate3d(0, -100%, 0);
  }
}
@keyframes transform-y-bottom {
  from {
    transform: translate3d(0, -100%, 0);
  }
  to {
    transform: translate3d(0, 0, 0);
  }
}
@keyframes error {
  0%,
  100% {
    transform: translate3d(0, 0, 0);
  }
  10%,
  30%,
  50%,
  70%,
  90% {
    transform: translate3d(-10px, 0, 0);
  }
  20%,
  40%,
  60%,
  80% {
    transform: translate3d(10px, 0, 0);
  }
}
